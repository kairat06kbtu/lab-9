import pygame, sys
from pygame.locals import *
import random, time
import os  # Для работы с путями к файлам

# Получаем путь к текущей папке, где находится скрипт
BASE_DIR = os.path.dirname(__file__)

# Инициализация Pygame
pygame.init()

# Частота обновления экрана
FPS = 60
FramePerSec = pygame.time.Clock()

# Цвета в формате RGB
RED = (255, 0, 0)
BLACK = (0, 0, 0)

# Размеры экрана
SCREEN_WIDTH = 400
SCREEN_HEIGHT = 600

# Начальная скорость и очки
SPEED = 5
SCORE = 0
COINS = 0
COIN_THRESHOLD = 5  # Кол-во монет, при котором увеличивается скорость

# Шрифты
font = pygame.font.SysFont("Verdana", 60)
font_small = pygame.font.SysFont("Verdana", 20)
game_over = font.render("Game Over", True, BLACK)

# Создание экрана
DISPLAYSURF = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Game")

# Загрузка фона
background = pygame.image.load(os.path.join(BASE_DIR, "Road.png"))
background = pygame.transform.scale(background, (SCREEN_WIDTH, SCREEN_HEIGHT))

# Функция отрисовки фона
def draw_background():
    DISPLAYSURF.blit(background, (0, 0))

# Класс врага
class Enemy(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load(os.path.join(BASE_DIR, "Enemy.png"))
        self.image = pygame.transform.scale(self.image, (80, 120))
        self.rect = self.image.get_rect()
        self.rect.center = (random.randint(40, SCREEN_WIDTH - 40), -50)

    def move(self):
        global SCORE
        self.rect.move_ip(0, SPEED)
        if self.rect.bottom > SCREEN_HEIGHT:
            SCORE += 1
            self.rect.top = -50
            self.rect.center = (random.randint(30, 370), -50)

# Класс игрока
class Player(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load(os.path.join(BASE_DIR, "Player.png"))
        self.image = pygame.transform.scale(self.image, (80, 120))
        self.rect = self.image.get_rect()
        self.rect.center = (160, 520)

    def move(self):
        pressed_keys = pygame.key.get_pressed()
        if self.rect.left > 0 and pressed_keys[K_LEFT]:
            self.rect.move_ip(-5, 0)
        if self.rect.right < SCREEN_WIDTH and pressed_keys[K_RIGHT]:
            self.rect.move_ip(5, 0)

# Класс монеты
class Coin(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load(os.path.join(BASE_DIR, "Coin.png"))
        self.image = pygame.transform.scale(self.image, (30, 30))
        self.rect = self.image.get_rect()
        self.reset()

    def reset(self):
        self.rect.center = (random.randint(40, SCREEN_WIDTH - 40), -50)
        self.weight = random.choice([1, 2, 3])

    def move(self):
        self.rect.move_ip(0, SPEED)
        if self.rect.top > SCREEN_HEIGHT:
            self.reset()

# Создание объектов
enemies = pygame.sprite.Group()
E1 = Enemy()
enemies.add(E1)

coins = pygame.sprite.Group()
C1 = Coin()
coins.add(C1)

all_sprites = pygame.sprite.Group()
P1 = Player()
all_sprites.add(P1, E1, C1)

# Событие для увеличения скорости
INC_SPEED = pygame.USEREVENT + 1
pygame.time.set_timer(INC_SPEED, 1000)

# Главный игровой цикл
while True:
    for event in pygame.event.get():
        if event.type == INC_SPEED:
            SPEED += 0.5
        if event.type == QUIT:
            pygame.quit()
            sys.exit()

    draw_background()

    # Отображение очков и монет
    scores = font_small.render(f"Score: {SCORE}", True, BLACK)
    coins_display = font_small.render(f"Coins: {COINS}", True, BLACK)
    DISPLAYSURF.blit(scores, (10, 10))
    DISPLAYSURF.blit(coins_display, (SCREEN_WIDTH - 100, 10))

    # Отрисовка объектов
    for entity in all_sprites:
        DISPLAYSURF.blit(entity.image, entity.rect)
        entity.move()

    # Столкновение с врагом
    if pygame.sprite.spritecollideany(P1, enemies):
        crash_sound = pygame.mixer.Sound(os.path.join(BASE_DIR, 'crash.mp3'))
        crash_sound.play()
        time.sleep(0.5)
        DISPLAYSURF.fill(RED)
        DISPLAYSURF.blit(game_over, (30, 250))
        pygame.display.update()
        for entity in all_sprites:
            entity.kill()
        time.sleep(2)
        pygame.quit()
        sys.exit()

    # Столкновение с монетой
    collided_coin = pygame.sprite.spritecollideany(P1, coins)
    if collided_coin:
        COINS += collided_coin.weight
        collided_coin.reset()
        if COINS % COIN_THRESHOLD == 0:
            SPEED += 1

    pygame.display.update()
    FramePerSec.tick(FPS)
